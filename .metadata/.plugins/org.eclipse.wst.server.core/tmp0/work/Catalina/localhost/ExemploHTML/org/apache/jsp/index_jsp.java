/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.11
 * Generated at: 2023-08-11 01:52:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"ISO-8859-1\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"css/slide.css\">\r\n");
      out.write("	<script src=\"js/script.js\"></script>\r\n");
      out.write("	<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"load()\">\r\n");
      out.write("	<!-- \r\n");
      out.write("	<div>\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	 -->\r\n");
      out.write("	<section class=\"sec1\">\r\n");
      out.write("		<div class=\"navigation\">\r\n");
      out.write("			<label for=\"r1\" class=\"bar labelTitulo\">Formulário</label> \r\n");
      out.write("			<label for=\"r2\" class=\"bar labelTitulo\">Lista Completa</label> \r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"slides\">\r\n");
      out.write("			<input type=\"radio\" name=\"r\" id=\"r1\"> \r\n");
      out.write("			<input type=\"radio\" name=\"r\" id=\"r2\"> \r\n");
      out.write("			<div class=\"content s1\">\r\n");
      out.write("				<form class=\"alinhamento\" action=\"\" method=\"post\">\r\n");
      out.write("					<div>\r\n");
      out.write("						<div>\r\n");
      out.write("							<div class=\"campo espacoMargin alinhamento\">\r\n");
      out.write("								<input class=\"caixaDeTexto\" type=\"number\" id=\"cod\" name=\"cod\" min=\"0\" step=\"1\" placeholder=\"Código\" required=\"required\"> \r\n");
      out.write("								<input class=\"btSimples\" type=\"submit\" id=\"enviar\" name=\"Buscar\" value=\"Buscar\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<input class=\"caixaDeTexto espacoMargin\" type=\"text\" id=\"nome\" name=\"nome\" placeholder=\"Nome\" required=\"required\"> \r\n");
      out.write("							<input class=\"caixaDeTexto espacoMargin\" type=\"date\" id=\"dataNasc\" name=\"dataNasc\" required=\"required\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"alinhamento\">\r\n");
      out.write("							<input class=\"btSimples\" type=\"submit\" id=\"enviar\" name=\"Criar\" value=\"Criar\">\r\n");
      out.write("							<input class=\"btSimples\" type=\"submit\" id=\"enviar\" name=\"Alterar\" value=\"Alterar\">\r\n");
      out.write("							<input class=\"btSimples\" type=\"submit\" id=\"enviar\" name=\"Remover\" value=\"Remover\">\r\n");
      out.write("							<input class=\"btSimples\" type=\"submit\" id=\"enviar\" name=\"Listar\" value=\"Listar\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"content\"></div>\r\n");
      out.write("			<div class=\"content\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("\r\n");
      out.write("	<div align=\"center\">\r\n");
      out.write("		<!-- \r\n");
      out.write("		<table border=\"1\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th><b>ID</b></th>\r\n");
      out.write("					<th><b>Nome</b></th>\r\n");
      out.write("					<th><b>Data Nasc.</b></th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("			<tbody>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>a</td>\r\n");
      out.write("					<td>a</td>\r\n");
      out.write("					<td>aa/aa/aaaa</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>b</td>\r\n");
      out.write("					<td>b</td>\r\n");
      out.write("					<td>bb/bb/bbbb</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		 -->\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
